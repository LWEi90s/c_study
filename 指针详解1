#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>


//void test(int arr[])
//{
//	int sz = sizeof(arr)/sizeof(arr[0]);
//	printf("%d\n",sz );
//
//}
//
//int main()
//{
//	int arr[10] = {0};
//	test(arr);
//
//	return 0;
//}

//
//int main()
//{
	//char a='w';
	//char* pc1 = &a;

	//printf("%c\n", *pc1);


	//char* p = "abcdef";//把a的地址付给p
	//printf("%c\n", *p);//打印a
	//printf("%s\n", p);//打印abcdef


	//char arr1[] = "abcdef";
	//char arr2[] = "abcdef";
	//const char* p1 = "abcdef";//常量不可修改
	//const char* p2 = "abcdef";

	//if (p1==p2)
	//{
	//	printf("same\n");

	//}
	//else
	//{
	//	printf("buxiangt\n");
	//}


	//指针数组 是数组
	//int arr[10] = { 0 };//整形数组
	//char arr2[5] = { 0 };//字符数组
	//int* arr3[5];//存放整形指针的数组--指针数组
	//char* arr4[5];//存放字符指针的数组--指针数组

	//int a = 10;
	//int b = 20;
	//int* arr5[2] = { &a,&b };

	//例子
	//int arr1[3] = { 1,2,3 };
	//int arr2[3] = { 2,3,4 };
	//int arr3[3] = { 3,4,5 };

	//int* parr[] = { arr1,arr2,arr3 };

	//for (int i = 0; i < 3; i++)
	//{
	//	for (int j = 0; j < 3; j++)
	//	{
	//		printf("%d ", *(parr[i] + j));

	//	}
	//	printf("\n");
	//}

	

	////数组指针 是指针 存放数组地址的指针
	//int* p=NULL;//整形指针
	//char* p1 = NULL;//字符指针

	//int arr[3] = { 0,1,2 };// arr 元素地址  ；&arr[0] 首元素地址 ；&arr 数组的地址
	////存储数组的指针
	//int(*p)[3] = &arr;//p就是数组指针


	//char* arr[5];
	//int(*p)[3] = &arr;//pa就是数组指针
	//char* (*pa)[5] = &arr;



	//int arr[3] = { 1,2,3 };
	//int *pa = &arr;

	//for (int i = 0; i < 3; i++)
	//{
	//	printf("%d ", *(pa + i));
	//		
	//}

//数组指针的用法
//void print1(int (*p)[2],int x,int y)
//{
//	for (int i = 0; i < x; i++)
//	{
//		for (int j = 0; j < y; j++)
//		{
//			printf("%d ",*(*(p+i)+j));//p是首元素地址，p+i就是一行的地址
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int arr[2][2] = { {1,2},{2,3} };
//	print1(arr,2,2);





//int arr[5];
//int* arr1[5];//指针数组，数组有5个元素，每个元素的类型是int*
//int(*arr2)[5];//数组指针，该指针指向了一个数组 数组有5个元素 每个元素的类型是 int
//int(*arr3[5])[6];//arr3是一个数组，该数组有5个元素。每个元素都是个数组指针，针指向了一个数组，数组里面有6个元素，每个元素的类型是int




//
//	return 0;
//
//}
